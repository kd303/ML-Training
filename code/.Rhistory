tapply(telecampData$age, list(telecampData$housing, telecampData$y),count)
tapply(telecampData$age, list(telecampData$contact, telecampData$y),count)
tapply(telecampData$age, list(telecampData$month, telecampData$y),count)
tapply(telecampData$age, list(telecampData$poutcome, telecampData$y),count)
length(telecampData)
length(telecampData$age)
z <-c(1:4119)
z
clear
z <-c(1:1)
z
?ftable
str(x)
ls
ls()
z
tab <- tapply(telecampData$age, list(telecampData$poutcome, telecampData$y),count)
tab
tapply(telecampData$age, list(telecampData$job, telecampData$education, telecampData$y),count)
ls
ls()
tab <- tapply(telecampData$age, list(telecampData$job, telecampData$education, telecampData$y),count)
names(dimnames(tab))<- c("job", "education", "y")
ftable(tab, row.vars=c("job", "education"), col.vars=c("y"))
?ftable
str tab
str(tab)
is.vector(tab)
str(tab)
ftable(tab, row.vars=c("job", "education"), col.vars=c("y"))
tab <- tapply(telecampData$age, list(telecampData$job, telecampData$education, telecampData$y),count,FALSE)
tab <- tapply(telecampData$age, list(telecampData$job, telecampData$education, telecampData$y),count,simplyfy = FALSE)
tab <- tapply(telecampData$age, list(telecampData$job, telecampData$education, telecampData$y),count,simplify = FALSE)
str(tab)
ftable(tab, row.vars=c("job", "education"), col.vars=c("y"))
clear
gendergap <- matrix(c(279,73,225,165,47,191),byrow=TRUE,nrow=2)
gendergap
dimnames(gendergap) <- list(Gender=c("Females","Males"),
PartyID=c("Democrat","Independent","Republican"))
gendergap
chisq.test(gendergap)
plot(telecampData$job, telecampData$cons.price.idx,xlab="education", ylab="Age", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "pink"))
plot(telecampData$job, telecampData$cons.price.idx,xlab="education", ylab="Consumer Price Idx", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "pink"))
summary(telecampData)
plot(telecampData$job, telecampData$poutcome,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "pink"))
telecampdata$y[,1] == "yes"
telecampData$y[,1] == "yes"
telecampData$y[1] == "yes"
telecampData$y[1] == "no"
plot(telecampData$poutcome, telecampData$cons.price.idx,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "pink"))
plot(telecampData$cons.conf.idx, telecampData$cons.price.idx,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "pink"))
max(telecampData$cons.conf.idx)
plot(Im(telecampData$cons.conf.idx), Im(telecampData$cons.price.idx),xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "pink"))
plot(Re(telecampData$cons.conf.idx), Re(telecampData$cons.price.idx),xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "pink"))
par()
pch=24
plot(Re(telecampData$cons.conf.idx), Re(telecampData$cons.price.idx),xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "pink"))
par(pch=24)
plot(Re(telecampData$cons.conf.idx), Re(telecampData$cons.price.idx),xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "pink"))
par()
par(pch=24)
plot(Re(telecampData$cons.conf.idx), Re(telecampData$cons.price.idx),xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "pink"))
par(pch=24, bg="green")
par(pch=24, bg="green")
plot(Re(telecampData$cons.conf.idx), Re(telecampData$cons.price.idx),xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "pink"))
par(pch=15)
plot(Re(telecampData$cons.conf.idx), Re(telecampData$cons.price.idx),xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "pink"))
plot(Re(telecampData$cons.conf.idx), Re(telecampData$cons.price.idx),xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
par(pch=15)
plot(Re(telecampData$cons.conf.idx), Re(telecampData$cons.price.idx),xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
plot(Im(telecampData$cons.conf.idx), Im(telecampData$cons.price.idx),xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
plot(Re(telecampData$cons.conf.idx), telecampData$education,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
par(pch=15)
plot(Re(telecampData$cons.conf.idx), telecampData$education,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
plot(telecampData$education,Re(telecampData$cons.conf.idx),xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
ls()
str(telecamp)
print(telecamp$cons.conf.idx)
print(telecamp$euribore3m)
print(telecamp$euribor3m)
str(telecamp)
print(telecamp$cons.price.idx)
print(telecamp$emp.var.rate)
?read.delim
telecamp<-read.csv("D:/z_kaushal/Rcode/data/bank-additional/bank-additional.csv",header=TRUE,sep=";",dec=".",stringsAsFactors=FALSE)
str(telecamp)
telecamp$job<-as.factor(telecamp$job)
telecamp$martial<-as.factor(telecamp$martial)
telecamp$marital<-as.factor(telecamp$marital)
str(telecamp)
telecamp$education<-as.factor(telecamp$education)
str(telecamp)
telecamp$default<-as.factor(telecamp$default)
telecamp$housing<-as.factor(telecamp$housing)
telecamp$loan<-as.factor(telecamp$loan)
telecamp$contact<-as.factor(telecamp$contact)
telecamp$month<-as.factor(telecamp$month)
telecamp$day_of_week<-as.factor(telecamp$day_of_week)
telecamp$poutcome<-as.factor(telecamp$poutcome)
str(telecamp)
telecamp$y<-as.factor(telecamp$y)
str(telecamp)
plot(telecamp$cons.conf.idx, telecampData$education,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
plot(telecamp$education, telecampData$cons.conf.idx,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
par()
par(pch=14)
plot(telecamp$education, telecampData$cons.conf.idx,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
plot(telecamp$age, telecampData$cons.conf.idx,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
str(telecamp)
plot(telecamp$cons.price.idx, telecampData$emp.var.rate,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
plot(telecamp$cons.price.idx, telecampData$emp.var.rate,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
plot(telecamp$euribor3m, telecampData$emp.var.rate,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
plot(telecamp$emp.var.rate, telecampData$euribor3m,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
par(pch=17)
plot(telecamp$emp.var.rate, telecampData$euribor3m,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
plot(telecamp$education, telecampData$euribor3m,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
plot(telecamp$education, telecampData$euribor3m,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
plot(telecamp$job, telecampData$euribor3m,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
plot(telecamp$poutcome, telecampData$euribor3m,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
print(telecamp$poutcome)
plot(telecamp$poutcome, telecampData$age,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
plot(telecamp$age, telecampData$poutcome,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
plot(telecamp$education, telecampData$poutcome,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
plot(telecamp$poutcome, telecampData$education,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
plot(telecamp$poutcome, telecampData$education,xlab="education", ylab="poutcome", main="Consumer price idx vs Job", col=ifelse(telecampData$y=="yes", "green", "red"))
?ggplot
test.plot <- ggplot(telecamp, aes(telecamp$age, telecamp$y) + geom_boxplot()+facet_grid(. ~ education)
background_grid(major='y', minor="none")
test.plot <- ggplot(telecamp, aes(telecamp$age, telecamp$y)
geom_boxplot()
test.plot <- ggplot(telecamp, aes(telecamp$age, telecamp$y))
ggdraw() + draw_plot(plot.iris, 0, .5, 1, .5)
ggdraw() + draw_plot(test.plot, 0, .5, 1, .5)
draw_plot(test.plot, 0, .5, 1, .5)
multiplot(test.plot)
install.packages(grid)
install.packages("grid")
library(ggplot2)
sp <- ggplot(telecamp, aes(telecamp$y,telecamp$education,fill)+geom_boxplot()
)
sp <- ggplot(telecamp, aes(telecamp$y,telecamp$education,fill))+geom_boxplot()
ggplot(telecamp, aes(telecamp$y,telecamp$education,fill))+geom_boxplot()
ggplot(telecamp, aes(telecamp$age,telecamp$education,fill))+geom_boxplot()
ggplot(telecamp, aes(telecamp$age,telecamp$y,fill))+geom_boxplot()
ggplot(telecamp, aes(telecamp$y,telecamp$age,fill))+geom_boxplot()
ggplot(telecamp, aes(telecamp$y,telecamp$age,fill))+geom_boxplot()+facet_grid(.~education)
ggplot(telecamp, aes(telecamp$y,telecamp$age,fill))+geom_boxplot()+facet_grid(.~job)
ggplot(telecamp, aes(telecamp$y,telecamp$age,fill))+geom_boxplot()+facet_grid(poutcome~job)
?aes()
ggplot(telecamp, aes(telecamp$y,telecamp$age,ifelse(telecamp$y=="yes","green","red"))+geom_boxplot()+facet_grid(poutcome~job)
)
ggplot(telecamp, aes(telecamp$y,telecamp$age,ifelse(telecamp$y=="yes","green","red")))+geom_boxplot()+facet_grid(poutcome~job)
ggplot(telecamp, aes(telecamp$y,telecamp$age,fill=ifelse(telecamp$y=="yes","green","red")))+geom_boxplot()+facet_grid(poutcome~job)
ggplot(telecamp, aes(telecamp$y,telecamp$emp.var.rate,fill=ifelse(telecamp$y=="yes","green","red")))+geom_boxplot()+facet_grid(poutcome~job)
ggplot(telecamp, aes(telecamp$y,telecamp$,fill=ifelse(telecamp$y=="yes","green","red")))+geom_boxplot()+facet_grid(poutcome~job)
str(telecamp)
ggplot(telecamp, aes(telecamp$y,telecamp$month,fill=ifelse(telecamp$y=="yes","green","red")))+geom_boxplot()+facet_grid(poutcome~job)
ggplot(telecamp, aes(telecamp$y,telecamp$age,fill=ifelse(telecamp$y=="yes","green","red")))+geom_boxplot()+facet_grid(poutcome~month)
ggplot(telecamp, aes(telecamp$y,telecamp$padays,fill=ifelse(telecamp$y=="yes","green","red")))+geom_boxplot()+facet_grid(poutcome~month)
ggplot(telecamp, aes(telecamp$y,telecamp$pdays,fill=ifelse(telecamp$y=="yes","green","red")))+geom_boxplot()+facet_grid(poutcome~month)
ggplot(telecamp, aes(telecamp$y,telecamp$cons.conf.idx,fill=ifelse(telecamp$y=="yes","green","red")))+geom_boxplot()+facet_grid(poutcome~month)
ggplot(telecamp, aes(telecamp$y,telecamp$duration,fill=ifelse(telecamp$y=="yes","green","red")))+geom_boxplot()+facet_grid(poutcome~month)
ggplot(telecamp, aes(telecamp$y,telecamp$duration,fill=ifelse(telecamp$y=="yes","green","red")))+geom_boxplot()+facet_grid(poutcome~month~contact)
ggplot(telecamp, aes(telecamp$y,telecamp$campaign,fill=ifelse(telecamp$y=="yes","green","red")))+geom_boxplot()+facet_grid(poutcome~month)
summary(telecamp$campaign)
summary(telecamp$y)
=451/4119
451/4119
ls()
save.image("D:\\z_kaushal\\Rcode\\data\\rworkspace")
q()
load("D:\\z_kaushal\\Rcode\\telephonicCampaign")
clear
ls
ls(0
)
ls()
summary(telecamp$y)
ggplot(telecamp, aes(telecamp$y,telecamp$campaign,fill=ifelse(telecamp$y=="yes","green","red")))+geom_boxplot()+facet_grid(poutcome~month)
library(ggplot)
library(ggplot2)
ggplot(telecamp, aes(telecamp$y,telecamp$campaign,fill=ifelse(telecamp$y=="yes","green","red")))+geom_boxplot()+facet_grid(poutcome~month)
mtcars
desc(mtcars)
summary(mtcars)
install.packages('plyr')
library('plyr')
library(plyr)
library(plyr)
count(mtcards,'gear')
install.packages()
require("plyr")
Sys.getenv("R_LIBS_USER")
remove.packages("plyr")
remove.packages("plyr")
find.package('plyr')
q()
ls()
q()
load("~/.RData")
View(telecamp)
setwd("D:/z_kaushal/ISIDMBA/code")
getwd()
version
library(readr)
Credit_Card_Expenses <- read_csv("D:/z_kaushal/ISIDMBA/DataSets/Credit_Card_Expenses.csv")
View(Credit_Card_Expenses)
View(Credit_Card_Expenses)
Credit_Card_Expenses
cc <- Credit_Card_Expenses
View(cc)
desc(cc)
describe(cc)
summary(cc)
ggplot(cc)
plot(cc["Month"],cc["CC_Expenses"])
cc[0]
cc["Month"]
cc["Month"][1]
cc["Month"]
summary(cc)
summary(cc$CC_Expenses)
exp <- cc$CC_Expenses
summary(exp)
range(exp)
quantile(exp
quantile(exp)
quantile(exp)
quantile(exp, 0.9)
quantile(exp, 0.1)
quantile(exp)
library(psych)
describe(exp)
?describe
save.image("D:/z_kaushal/ISIDMBA/code/day1_R_Basics.RData")
hist(CC)
hist(cc)
View(cc)
View(cc)
View(cc)
hist(cc)
hist(Credit_Card_Expenses)
hist(Credit_Card_Expenses)
hist(cc)
boxplot(cc)
View(cc)
hist(cc)
View(cc)
View(cc)
View(cc)
View(cc)
View(cc)
View(cc)
View(Credit_Card_Expenses)
library(readr)
cce <- read_csv("D:/z_kaushal/ISIDMBA/DataSets/CC_Expenses_Exercise.csv")
View(cce)
cce20 = cce[1:20,1:5]
write.csv(cce20, "d:/z_kaushal/ISIDATA/sometemp.csv")
write.csv(cce20, "d:/z_kaushal/ISIDMBA/DataSets/sometemp.csv")
describe(cce$`Credit Card usage`)
hist(cce$`Credit Card usage`)
?hist
hist(cc$CC_Expenses)
hist(cc$CC_Expenses, cc$Month)
hist(cc$Month, cc$CC_Expenses)
hist(cc$CC_Expenses)
hist(cc)
View(cc)
attach(cce)
View('Credit Card usage')
cce
`Credit Card usage`
gender=factor(Sex, lables=c("Male","Female"))
gender = factor(Sex, lables = c("Male","Female"))
attach(cce)
gender = factor(Sex, lables = c("Male","Female"))
gender = factor(Sex, labels = c("Male","Female"))
gender
shopping = factor(shopping, labels = c("Yes","No"))
View(cce)
View(cce)
banking = factor(Banking,labels = c("Yes","No"))
?aggregate()
?aggregate('Credit Card usage',by=list(gender), FUN=mean)
aggregate('Credit Card usage',by=list(gender), FUN=mean)
aggregate(cce$`Credit Card usage`,by=list(gender), FUN=mean)
aggregate(`Credit Card usage`,by=list(gender), FUN=mean)
boxplot(cc ~ gender)
boxplot(`Credit Card usage` ~ gender)
aggregate(`Credit Card usage`,by=list(gender), FUN=mean)
aggregate(shopping,by=list(gender), FUN=mean)
aggregate(`Credit Card usage`,by=list(shopping), FUN=mean)
aggregate(`Credit Card usage`,by=list(shopping), FUN=mean)
shopping = factor(shopping, labels = c("Yes","No"))
shopping = factor(cce$shopping, labels = c("Yes","No"))
shopping = factor(cce$Shopping, labels = c("Yes","No"))
aggregate(`Credit Card usage`,by=list(shopping), FUN=mean)
boxplot(`Credit Card usage` ~ shopping)
boxplot(`Credit Card usage` ~ gender)
boxplot(`Credit Card usage` ~ shopping ~ gender)
boxplot(`Credit Card usage` ~ shopping + gender)
boxplot(`Credit Card usage` ~ shopping + gender + banking)
aggregate(`Credit Card usage`~shopping + banking + gender, FUN=mean)
aggregate(`Credit Card usage`~shopping + banking + gender, FUN=summary)
histBy(`Credit Card usage`,gender)
library(readr)
CSat_Freq_Table <- read_csv("D:/z_kaushal/ISIDMBA/DataSets/CSat_Freq_Table.csv")
View(CSat_Freq_Table)
sats.survey = CSat_Freq_Table
attach(sats.survey)
save.image("D:/z_kaushal/ISIDMBA/code/day1_R_Basics.RData")
survey = table(q1)
survey
cbind(survey)
q1_perc = prop.table(survey)*100
q1_perc
pie(survey)
q1_perc = prop.table(survey)*100
pie(q1_perc)
survey
q1_perc = prop.table(survey)*100
q1_perc
pie(q1_perc)
pie(survey)
pie(survey)
survey = table(q1)
q1_perc = prop.table(survey)*100
pie(survey)
pie(table(q4))
box(table(q4))
barplot(table(q3))
pie(table(q43))
pie(table(q3))
pie(table(q3) , radius = 0.99)
pie(table(q3) , radius = 100)
pie(table(q3) , radius = 10)
library(c(print(as.character(pkgs), collapse="\",\"")), repos = NULL, type="binary")
library(c(print(as.character(pkgs), collapse="\",\"")))
save.image("D:/z_kaushal/ISIDMBA/code/day1_R_Basics.RData")
0.69*1.96
sqrt(20)
3.11/sqrt(20)
library(readr)
po <- read_csv("D:/z_kaushal/ISIDMBA/DataSets/PO_Processing.csv")
View(po)
save.image("D:/z_kaushal/ISIDMBA/code/Day2/Day2Vars.RData")
describe(po)
= 49/2.43
49/2.43
(49-40)/2.43
tval = (49-40)/2.43
t.test(po, alternative = "greater", mu = 40)
t.test(po$Processing_Time, alternative = "greater", mu = 40)
library(readr)
CRTime <- read_csv("D:/z_kaushal/ISIDMBA/DataSets/Complaint_Response_Time.csv")
View(CRTime)
t.test(CRTime$`Response Time`,alternative = "greater", mu=24)
save.image("D:/z_kaushal/ISIDMBA/code/Day2/Day2Vars.RData")
library(readr)
Sales_Promotion <- read_csv("D:/z_kaushal/ISIDMBA/DataSets/Sales_Promotion.csv")
View(Sales_Promotion)
View(Sales_Promotion)
outlet = factor(Sales_Promotion$Outlet)
t.test(Sales_Promotion$Sales~outlet, alternative('less'))
t.test(Sales_Promotion$Sales~outlet, alternative = 'less')
View(Sales_Promotion)
View(Sales_Promotion)
t.test(Sales_Promotion$Sales ~ outlet, alternative = 'greater')
t.test(Sales_Promotion$Sales ~ outlet, alternative = 'less')
t.test(Sales_Promotion$Sales ~ outlet, alternative = 'greater')
boxplot(Sales_Promotion$Outlet)
boxplot(Sales_Promotion$Sales ~ outlet)
save.image("D:/z_kaushal/ISIDMBA/code/Day2/Day2Vars.RData")
library(readr)
bpo_util <- read_csv("D:/z_kaushal/ISIDMBA/DataSets/Utilization.csv")
View(bpo_util)
method = factor(bpo_util$Method)
t.test(bpo_util$Utilization ~ method)
var.test(Sales_Promotion$Sales ~ outlet)
1/0.319
var.test(bpo_util$Utilization ~ method)
save.image("D:/z_kaushal/ISIDMBA/code/Day2/Day2Vars.RData")
library(readr)
Tires <- read_csv("D:/z_kaushal/ISIDMBA/DataSets/Tires.csv")
View(Tires)
b1 = Tires$`Brand 1`
b2 = Tires$`Brand 2`
t.test(b1,b2, paired = TRUE)
boxplot(Tires)
save.image("D:/z_kaushal/ISIDMBA/code/Day2/Day2Vars.RData")
library(readr)
Diet <- read_csv("D:/z_kaushal/ISIDMBA/DataSets/Diet.csv")
View(Diet)
t.test(Diet$Before, Diet$After, paired=TRUE)
t.test(Diet$Before, Diet$After, alternative = 'greater', paired=TRUE)
boxplot(Diet$Before, Diet$After)
library(readr)
Loan_processing <- read_csv("D:/z_kaushal/ISIDMBA/DataSets/Loan_processing.csv")
View(Loan_processing)
loan = factor(Loan_processing)
loan = factor(Loan_processing$Loans)
table(loan)
prop.test(table(loan), alternative = "greater", p=0.99)
prop.test(table(loan), alternative = "less", p=0.99)
t.test(Sales_Promotion$Sales ~ outlet, alternative = 'greater')
library(readr)
Shipment <- read_csv("D:/z_kaushal/ISIDMBA/DataSets/Shipment.csv")
View(Shipment)
prop.test(table(Shipment), alternative = "greater", p=0.02)
library(readr)
Order_Processing <- read_csv("D:/z_kaushal/ISIDMBA/DataSets/Order_Processing.csv")
View(Order_Processing)
table(Order_Processing)
prop.test(table(Order_processing), alternative = "less")
prop.test(table(Order_Processing), alternative = "less")
save.image("D:/z_kaushal/ISIDMBA/code/Day2/Day2Vars.RData")
library(readr)
PO_Processing <- read_csv("D:/z_kaushal/ISIDMBA/DataSets/PO_Processing.csv")
View(PO_Processing)
hist(PO_Processing$Processing_Time)
hist(PO_Processing$Processing_Time, breaks=7)
hist(PO_Processing$Processing_Time, breaks=7)
qqnorm(PO_Processing$Processing_Time)
qqline(PO_Processing$Processing_Time)
shapiro.test(PO_Processing$Processing_Time)
library(readr)
Sales_Revenue_Anova <- read_csv("D:/z_kaushal/ISIDMBA/DataSets/Sales_Revenue_Anova.csv")
View(Sales_Revenue_Anova)
Sales_Revenue_Anova
location = factor(Sales_Revenue_Anova$Location)
boxplot(Sales_Revenue_Anova$`Sales Revenue`~location)
z = aov(Sales_Revenue_Anova$`Sales Revenue`~location)
summary(z)
aggregate(Sales_Revenue_Anova$`Sales Revenue`~Sales_Revenue_Anova$Location, FUN=mean)
summary(z)
z$residuals
qqnorm(z$residuals)
qqline(z$residuals)
shapiro.test(z$residuals)
save.image("D:/z_kaushal/ISIDMBA/code/Day2/Day2Vars.RData")
summary(z)
save.image("D:/z_kaushal/ISIDMBA/code/Day2/Day2Vars.RData")
library(readr)
Capsule <- read_csv("D:/z_kaushal/ISIDMBA/DataSets/Capsule.csv")
View(Capsule)
Capsule
aov(Capsule$Time~Capsule$Juice+Capsule$Capsule)
aov(Capsule$Time~Capsule$Juice+Capsule$Capsule+Capsule$Juice*Capsule$Capsule)
model = aov(Capsule$Time~Capsule$Juice+Capsule$Capsule+Capsule$Juice*Capsule$Capsule)
summary(model)
model$residuals
qqnorm(model$residuals)
qqline(model$residuals)
model1 = aov(Capsule$Time~Capsule$Capsule+Capsule$Juice*Capsule$Capsule)
summary(model1)
shapiro.test(model$residuals)
interaction.plot(Capsule$Juice, Capsule$Capsule, Capsule$Time)
interaction.plot(Capsule$Juice, Capsule$Capsule, Capsule$Time, fun = mean)
interaction.plot(Capsule$Capsule, Capsule$Juice, Capsule$Time, fun = mean)
save.image("D:/z_kaushal/ISIDMBA/code/Day2/Day2Vars.RData")
save.image("D:/z_kaushal/ISIDMBA/code/Day3/Day3Vars.RData")
load("D:/z_kaushal/ISIDMBA/code/Day2/Day2Vars.RData")
load("D:/z_kaushal/ISIDMBA/code/Day3/Day3Vars.RData")
save.image("D:/z_kaushal/ISIDMBA/code/Day3/Day3Vars.RData")
save.image("D:/z_kaushal/ISIDMBA/code/Day3/Day3Vars.RData")
library(readr)
multRegYield <- read_csv("D:/z_kaushal/ISIDMBA/DataSets/Mult_Reg_Yield.csv")
View(multRegYield)
plot(multRegYield$`%Yield`, multRegYield$Time)
plot(multRegYield$`%Yield`, multRegYield$Temperature)
plot(multRegYield$Time, multRegYield$`%Yield`)
cor(multRegYield)
ymodel = lm(multRegYield$`%Yield` ~ multRegYield$Time+multRegYield$Temperature)
summary(ymodel)
ymodel1 = lm(multRegYield$`%Yield` ~ multRegYield$Time)
summary(ymodel1)
plot(ymodel1$residuals)
cbind(multRegYeild,predict(ymodel1))
cbind(predict(ymodel1),multRegYeild,)
cbind(predict(ymodel1),multRegYeild)
cbind(predict(ymodel1),multRegYield)
plot(multRegYield$Time, multRegYield$`%Yield`)
line(multRegYield$Time, predict(ymodel1), col="green")
plot(ymodel1$residuals)
lines(multRegYield$Time, predict(ymodel1), col="green")
plot(multRegYield$Time, multRegYield$`%Yield`)
lines(multRegYield$Time, predict(ymodel1), col="green")
shapiro.test(ymodel1$residuals)
qqnorm(ymodel1$residuals)
qqline(ymodel1$residuals)
plot(ymodel1$residuals, predict(ymodel1))
plot(predict(ymodel1), ymodel1$residuals)
library(car)
outlierTest(ymodel1)
install.packages("car")
outlierTest(ymodel1)
outlier(ymodel1)
install.packages("minqa")
install.packages("car")
library(car)
install.packages("nloptr")
library(car)
install.packages("SparseM")
library(car)
install.packages("MatrixModels")
library(car)
install.packages("logit")
install.packages("psych")
install.packages("psych")
library(car)
